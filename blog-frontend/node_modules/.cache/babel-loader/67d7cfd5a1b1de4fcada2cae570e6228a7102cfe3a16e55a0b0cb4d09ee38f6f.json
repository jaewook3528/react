{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 안 함\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\nsagaMiddleware.run(rootSaga);\nloadUser();\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(HelmetProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n})))), document.getElementById('root'));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Provider","createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","tempSetUser","check","HelmetProvider","sagaMiddleware","store","loadUser","user","localStorage","getItem","dispatch","e","console","log","run","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["C:/react/git/react/blog-frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, { rootSaga } from './modules';\r\nimport { tempSetUser, check } from './modules/user';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nfunction loadUser() {\r\n  try {\r\n    const user = localStorage.getItem('user');\r\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 안 함\r\n\r\n    store.dispatch(tempSetUser(user));\r\n    store.dispatch(check());\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <HelmetProvider>\r\n        <App />\r\n      </HelmetProvider>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,IAAIC,QAAQ,QAAQ,WAAW;AACjD,SAASC,WAAW,EAAEC,KAAK,QAAQ,gBAAgB;AACnD,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,MAAMC,cAAc,GAAGN,oBAAoB,EAAE;AAC7C,MAAMO,KAAK,GAAGV,WAAW,CACvBI,WAAW,EACXF,mBAAmB,CAACD,eAAe,CAACQ,cAAc,CAAC,CAAC,CACrD;AAED,SAASE,QAAQA,CAAA,EAAG;EAClB,IAAI;IACF,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,CAACF,IAAI,EAAE,OAAO,CAAC;;IAEnBF,KAAK,CAACK,QAAQ,CAACT,WAAW,CAACM,IAAI,CAAC,CAAC;IACjCF,KAAK,CAACK,QAAQ,CAACR,KAAK,EAAE,CAAC;EACzB,CAAC,CAAC,OAAOS,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C;AACF;AAEAT,cAAc,CAACU,GAAG,CAACd,QAAQ,CAAC;AAC5BM,QAAQ,EAAE;AAEVhB,QAAQ,CAACyB,MAAM,eACb1B,KAAA,CAAA2B,aAAA,CAACtB,QAAQ;EAACW,KAAK,EAAEA,KAAM;EAAAY,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACrBjC,KAAA,CAAA2B,aAAA,CAACvB,aAAa;EAAAwB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACZjC,KAAA,CAAA2B,aAAA,CAACb,cAAc;EAAAc,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACbjC,KAAA,CAAA2B,aAAA,CAACzB,GAAG;EAAA0B,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,EAAG,CACQ,CACH,CACP,EACXC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;AACDhC,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}