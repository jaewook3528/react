{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nconst LOGOUT = 'user/LOGOUT';\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return {\n      ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return {\n      ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return {\n      ...state,\n      user: null,\n      checkError: error\n    };\n  },\n  [LOGOUT]: state => ({\n    ...state,\n    user: null\n  })\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","call","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","logoutSaga","userSaga","initialState","checkError","state","_ref","payload","_ref2","_ref3","error"],"sources":["C:/react/git/react/blog-frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n      yield call(authAPI.logout); // logout API 호출\r\n      localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: state => ({\r\n        ...state,\r\n        user: null,\r\n      }),\r\n  },\r\n  initialState,\r\n);"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3D,SAASC,UAAU,EAAEC,IAAI,QAAQ,oBAAoB;AACrD,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAC1C,OAAOC,iBAAiB,IACtBC,wBAAwB,QACnB,0BAA0B;AAEjC,MAAMC,aAAa,GAAG,oBAAoB,CAAC,CAAC;AAC5C;AACA,MAAM,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAGJ,wBAAwB,CACpE,YAAY,CACb;AACD,MAAMK,MAAM,GAAG,aAAa;AAE5B,OAAO,MAAMC,WAAW,GAAGZ,YAAY,CAACO,aAAa,EAAEM,IAAI,IAAIA,IAAI,CAAC;AACpE,OAAO,MAAMC,KAAK,GAAGd,YAAY,CAACQ,KAAK,CAAC;AACxC,OAAO,MAAMO,MAAM,GAAGf,YAAY,CAACW,MAAM,CAAC;AAE1C,MAAMK,SAAS,GAAGX,iBAAiB,CAACG,KAAK,EAAEJ,OAAO,CAACU,KAAK,CAAC;AAEzD,SAASG,gBAAgBA,CAAA,EAAG;EAC1B,IAAI;IACFC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C;AACF;AAEA,UAAUC,UAAUA,CAAA,EAAG;EACnB,IAAI;IACF,MAAMpB,IAAI,CAACC,OAAO,CAACW,MAAM,CAAC,CAAC,CAAC;IAC5BG,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AACJ;AAEA,OAAO,UAAUI,QAAQA,CAAA,EAAG;EACxB,MAAMtB,UAAU,CAACM,KAAK,EAAEQ,SAAS,CAAC;EAClC,MAAMd,UAAU,CAACQ,aAAa,EAAEO,gBAAgB,CAAC;EACjD,MAAMf,UAAU,CAACS,MAAM,EAAEY,UAAU,CAAC;AACxC;AAEA,MAAME,YAAY,GAAG;EACnBZ,IAAI,EAAE,IAAI;EACVa,UAAU,EAAE;AACd,CAAC;AAED,eAAezB,aAAa,CAC1B;EACE,CAACM,aAAa,GAAG,CAACoB,KAAK,EAAAC,IAAA;IAAA,IAAE;MAAEC,OAAO,EAAEhB;IAAK,CAAC,GAAAe,IAAA;IAAA,OAAM;MAC9C,GAAGD,KAAK;MACRd;IACF,CAAC;EAAA,CAAC;EACF,CAACJ,aAAa,GAAG,CAACkB,KAAK,EAAAG,KAAA;IAAA,IAAE;MAAED,OAAO,EAAEhB;IAAK,CAAC,GAAAiB,KAAA;IAAA,OAAM;MAC9C,GAAGH,KAAK;MACRd,IAAI;MACJa,UAAU,EAAE;IACd,CAAC;EAAA,CAAC;EACF,CAAChB,aAAa,GAAG,CAACiB,KAAK,EAAAI,KAAA;IAAA,IAAE;MAAEF,OAAO,EAAEG;IAAM,CAAC,GAAAD,KAAA;IAAA,OAAM;MAC/C,GAAGJ,KAAK;MACRd,IAAI,EAAE,IAAI;MACVa,UAAU,EAAEM;IACd,CAAC;EAAA,CAAC;EACF,CAACrB,MAAM,GAAGgB,KAAK,KAAK;IAChB,GAAGA,KAAK;IACRd,IAAI,EAAE;EACR,CAAC;AACL,CAAC,EACDY,YAAY,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}