{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\components\\\\post\\\\CommentList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteComment } from '../../lib/api/posts';\nimport { listComments } from '../../modules/post';\nconst CommentListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n_c = CommentListBlock;\nconst CommentItemBlock = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h4 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    color: ${palette.gray[8]};\n  }\n\n  p {\n    margin-top: 0.5rem;\n  }\n`;\n_c2 = CommentItemBlock;\nconst CommentItem = _ref => {\n  _s();\n  let {\n    comment,\n    onRemove\n  } = _ref;\n  console.log(comment);\n  const {\n    _id,\n    user,\n    text,\n    createdAt\n  } = comment;\n  const dispatch = useDispatch();\n  const handleRemove = async () => {\n    try {\n      await deleteComment({\n        postId: comment.post,\n        commentId: _id\n      });\n      onRemove(_id);\n      dispatch(listComments(comment.post)); // 댓글 목록 불러오기\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CommentItemBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"\\uC791\\uC131\\uC790 : \", user.username, \" \\uC791\\uC131\\uB0A0\\uC9DC :\", new Date(createdAt).toLocaleDateString()), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"\\uC0AD\\uC81C\"));\n};\n_s(CommentItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c3 = CommentItem;\nconst CommentList = _ref2 => {\n  _s2();\n  let {\n    comments\n  } = _ref2;\n  //console.log('aaa');\n  const [commentList, setCommentList] = useState(comments);\n  const handleRemove = id => {\n    setCommentList(commentList.filter(comment => comment._id !== id));\n  };\n  return /*#__PURE__*/React.createElement(CommentListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00 \\uB9AC\\uC2A4\\uD2B8\"), comments.map(comment => /*#__PURE__*/React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    onRemove: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n};\n_s2(CommentList, \"AjVIO0jvINgkv7i6yaiBJxm68GA=\");\n_c4 = CommentList;\nexport default CommentList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CommentListBlock\");\n$RefreshReg$(_c2, \"CommentItemBlock\");\n$RefreshReg$(_c3, \"CommentItem\");\n$RefreshReg$(_c4, \"CommentList\");","map":{"version":3,"names":["React","useState","styled","palette","Responsive","useDispatch","useSelector","deleteComment","listComments","CommentListBlock","_c","CommentItemBlock","div","gray","_c2","CommentItem","_ref","_s","comment","onRemove","console","log","_id","user","text","createdAt","dispatch","handleRemove","postId","post","commentId","e","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","username","Date","toLocaleDateString","onClick","_c3","CommentList","_ref2","_s2","comments","commentList","setCommentList","id","filter","map","key","_c4","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/components/post/CommentList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteComment } from '../../lib/api/posts';\r\nimport { listComments } from '../../modules/post';\r\n\r\nconst CommentListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst CommentItemBlock = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[2]};\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    color: ${palette.gray[8]};\r\n  }\r\n\r\n  p {\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst CommentItem = ({ comment, onRemove }) => {\r\n  console.log(comment);\r\n  const { _id, user, text, createdAt } = comment;\r\n  const dispatch = useDispatch();\r\n  const handleRemove = async () => {\r\n    try {\r\n      await deleteComment({ postId: comment.post, commentId: _id });\r\n      onRemove(_id);\r\n      dispatch(listComments(comment.post)); // 댓글 목록 불러오기\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <CommentItemBlock> \r\n      <p>{text}</p>\r\n      <p>작성자 : {user.username} 작성날짜 :{new Date(createdAt).toLocaleDateString()}</p>\r\n      <button onClick={handleRemove}>삭제</button>\r\n    </CommentItemBlock>\r\n  );\r\n};\r\n\r\nconst CommentList = ({ comments }) => {\r\n  //console.log('aaa');\r\n  const [commentList, setCommentList] = useState(comments);\r\n\r\n  const handleRemove = (id) => {\r\n    setCommentList(commentList.filter((comment) => comment._id !== id));\r\n  };\r\n  return (\r\n    <CommentListBlock>\r\n      <p>댓글 리스트</p>\r\n      {comments.map(comment => (\r\n        <CommentItem key={comment._id} comment={comment} onRemove={handleRemove}/>\r\n      ))}\r\n    </CommentListBlock>\r\n  );\r\n};\r\n\r\nexport default CommentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}