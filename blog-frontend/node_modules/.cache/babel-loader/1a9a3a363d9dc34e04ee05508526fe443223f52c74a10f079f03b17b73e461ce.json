{"ast":null,"code":"import _defineProperty from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime().mark(logoutSaga),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(userSaga);import{createAction,handleActions}from'redux-actions';import{takeLatest,call}from'redux-saga/effects';import*as authAPI from'../lib/api/auth';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';var TEMP_SET_USER='user/TEMP_SET_USER';// 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nvar _createRequestActionT=createRequestActionTypes('user/CHECK'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),CHECK=_createRequestActionT2[0],CHECK_SUCCESS=_createRequestActionT2[1],CHECK_FAILURE=_createRequestActionT2[2];var LOGOUT='user/LOGOUT';export var tempSetUser=createAction(TEMP_SET_USER,function(user){return user;});export var check=createAction(CHECK);export var logout=createAction(LOGOUT);var checkSaga=createRequestSaga(CHECK,authAPI.check);function checkFailureSaga(){try{localStorage.removeItem('user');// localStorage에서 user를 제거\n}catch(e){console.log('localStorage is not working');}}function logoutSaga(){return _regeneratorRuntime().wrap(function logoutSaga$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(authAPI.logout);case 3:// logout API 호출\nlocalStorage.removeItem('user');// localStorage에서 user를 제거\n_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}},_marked,null,[[0,6]]);}export function userSaga(){return _regeneratorRuntime().wrap(function userSaga$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(CHECK,checkSaga);case 2:_context2.next=4;return takeLatest(CHECK_FAILURE,checkFailureSaga);case 4:_context2.next=6;return takeLatest(LOGOUT,logoutSaga);case 6:case\"end\":return _context2.stop();}},_marked2);}var initialState={user:null,checkError:null};export default handleActions((_handleActions={},_defineProperty(_handleActions,TEMP_SET_USER,function(state,_ref){var user=_ref.payload;return _objectSpread(_objectSpread({},state),{},{user:user});}),_defineProperty(_handleActions,CHECK_SUCCESS,function(state,_ref2){var user=_ref2.payload;return _objectSpread(_objectSpread({},state),{},{user:user,checkError:null});}),_defineProperty(_handleActions,CHECK_FAILURE,function(state,_ref3){var error=_ref3.payload;return _objectSpread(_objectSpread({},state),{},{user:null,checkError:error});}),_defineProperty(_handleActions,LOGOUT,function(state){return _objectSpread(_objectSpread({},state),{},{user:null});}),_handleActions),initialState);","map":{"version":3,"names":["logoutSaga","_marked2","_regeneratorRuntime","mark","userSaga","createAction","handleActions","takeLatest","call","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","_createRequestActionT","_createRequestActionT2","_slicedToArray","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","wrap","logoutSaga$","_context","prev","next","t0","stop","_marked","userSaga$","_context2","initialState","checkError","_handleActions","_defineProperty","state","_ref","payload","_objectSpread","_ref2","_ref3","error"],"sources":["C:/react/git/react/blog-frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n      yield call(authAPI.logout); // logout API 호출\r\n      localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: state => ({\r\n        ...state,\r\n        user: null,\r\n      }),\r\n  },\r\n  initialState,\r\n);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}