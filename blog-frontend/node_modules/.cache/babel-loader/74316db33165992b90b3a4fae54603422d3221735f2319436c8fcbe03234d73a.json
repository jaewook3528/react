{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\components\\\\post\\\\CommentList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport { useDispatch } from 'react-redux';\nimport { deleteComment, writeCommentReply, listCommentReplies } from '../../lib/api/posts';\nimport { listComments } from '../../modules/post';\nconst CommentListBlock = styled(Responsive)`\n  margin-top: 3rem;\n  padding-left: 0rem;\n`;\n_c = CommentListBlock;\nconst CommentItemBlock = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  padding-left: 0rem;\n  border:1px solid #333;\n  &:first-child {\n    padding-top: 0;\n  }\n\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h4 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    color: ${palette.gray[8]};\n  }\n\n  p {\n    margin-top: 0.5rem;\n  }\n  textarea{\n    margin-top:5px;\n    width:90%;\n  }\n  .comment{\n   \n    padding:15px;\n  }\n`;\n_c2 = CommentItemBlock;\nconst CommentItem = _ref => {\n  _s();\n  let {\n    comment,\n    onRemove,\n    loginuser\n  } = _ref;\n  const {\n    _id,\n    user,\n    text,\n    createdAt,\n    replies\n  } = comment;\n  const [replyText, setReplyText] = useState('');\n  const [replyList, setReplyList] = useState(replies);\n  const dispatch = useDispatch();\n  const handleRemove = async idx => {\n    if (comment.user._id === loginuser._id) {\n      //console.log(idx);\n      //return;\n      try {\n        await deleteComment({\n          postId: comment.post,\n          commentId: idx\n        });\n        onRemove(_id);\n        dispatch(listComments(comment.post)); // 댓글 목록 불러오기\n        dispatch(listCommentReplies(comment.post, idx)); // 댓글 목록 불러오기\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert('본인 댓글만 삭제하실 수 있습니다.');\n      return false;\n    }\n  };\n  const handleReplySubmit = async () => {\n    if (!replyText) {\n      alert('대댓글을 입력해주세요.');\n      return;\n    }\n    //console.log(_id);\n    try {\n      const response = await writeCommentReply({\n        postId: comment.post,\n        text: replyText,\n        parentCommentId: _id // 부모 댓글의 ID를 전달\n      });\n\n      setReplyList([...replyList, response.data]);\n      setReplyText('');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CommentItemBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"\\uC791\\uC131\\uC790 : \", user.username, \" \\uC791\\uC131\\uB0A0\\uC9DC :\", new Date(createdAt).toLocaleDateString(), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemove(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 102\n    }\n  }, \"\\uC0AD\\uC81C\")), replyList.map(reply => /*#__PURE__*/React.createElement(CommentItemBlock, {\n    key: reply._id,\n    style: {\n      marginLeft: '3rem',\n      marginRight: '2rem',\n      border: '1px solid #eeeeee'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, reply.text), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"\\uC791\\uC131\\uC790: \", reply.user.username, \" \\uC791\\uC131\\uB0A0\\uC9DC:\", ' ', new Date(reply.createdAt).toLocaleDateString(), reply.user._id === loginuser._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemove(reply._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"\\uC0AD\\uC81C\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    value: replyText,\n    onChange: e => setReplyText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleReplySubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\")));\n};\n_s(CommentItem, \"RDr+36aCwHZIGF4yTqE9pvaBcNQ=\", false, function () {\n  return [useDispatch];\n});\n_c3 = CommentItem;\nconst CommentList = _ref2 => {\n  _s2();\n  let {\n    comments,\n    loginuser\n  } = _ref2;\n  //console.log('aaa');\n  const [commentList, setCommentList] = useState(comments);\n  const handleRemove = id => {\n    setCommentList(commentList.filter(comment => comment._id !== id));\n  };\n  return /*#__PURE__*/React.createElement(CommentListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00 \\uB9AC\\uC2A4\\uD2B8\"), comments.map(comment => /*#__PURE__*/React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    loginuser: loginuser,\n    onRemove: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })));\n};\n_s2(CommentList, \"AjVIO0jvINgkv7i6yaiBJxm68GA=\");\n_c4 = CommentList;\nexport default CommentList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CommentListBlock\");\n$RefreshReg$(_c2, \"CommentItemBlock\");\n$RefreshReg$(_c3, \"CommentItem\");\n$RefreshReg$(_c4, \"CommentList\");","map":{"version":3,"names":["React","useState","styled","palette","Responsive","useDispatch","deleteComment","writeCommentReply","listCommentReplies","listComments","CommentListBlock","_c","CommentItemBlock","div","gray","_c2","CommentItem","_ref","_s","comment","onRemove","loginuser","_id","user","text","createdAt","replies","replyText","setReplyText","replyList","setReplyList","dispatch","handleRemove","idx","postId","post","commentId","e","console","log","alert","handleReplySubmit","response","parentCommentId","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","username","Date","toLocaleDateString","onClick","map","reply","key","style","marginLeft","marginRight","border","placeholder","value","onChange","target","_c3","CommentList","_ref2","_s2","comments","commentList","setCommentList","id","filter","_c4","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/components/post/CommentList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport { useDispatch} from 'react-redux';\r\nimport { deleteComment,writeCommentReply,listCommentReplies } from '../../lib/api/posts';\r\nimport { listComments } from '../../modules/post';\r\n\r\nconst CommentListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n  padding-left: 0rem;\r\n`;\r\n\r\nconst CommentItemBlock = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  padding-left: 0rem;\r\n  border:1px solid #333;\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[2]};\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n    margin-bottom: 0.5rem;\r\n    color: ${palette.gray[8]};\r\n  }\r\n\r\n  p {\r\n    margin-top: 0.5rem;\r\n  }\r\n  textarea{\r\n    margin-top:5px;\r\n    width:90%;\r\n  }\r\n  .comment{\r\n   \r\n    padding:15px;\r\n  }\r\n`;\r\n\r\nconst CommentItem = ({ comment, onRemove ,loginuser}) => {\r\n  \r\n  const { _id, user, text, createdAt,replies  } = comment;\r\n  const [replyText, setReplyText] = useState('');\r\n  const [replyList,setReplyList] = useState(replies);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleRemove = async (idx) => {\r\n   \r\n    if(comment.user._id === loginuser._id){\r\n      //console.log(idx);\r\n      //return;\r\n      try {\r\n        await deleteComment({ postId: comment.post, commentId: idx });\r\n        onRemove(_id);\r\n        dispatch(listComments(comment.post)); // 댓글 목록 불러오기\r\n        dispatch(listCommentReplies(comment.post,idx)); // 댓글 목록 불러오기\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n    }else{\r\n      alert('본인 댓글만 삭제하실 수 있습니다.');\r\n      return false;\r\n    }   \r\n  };\r\n\r\n\r\n  const handleReplySubmit = async () => {\r\n    if (!replyText) {\r\n      alert('대댓글을 입력해주세요.');\r\n      return;\r\n    }\r\n    //console.log(_id);\r\n    try {\r\n      const response = await writeCommentReply({\r\n        postId: comment.post,\r\n        text: replyText,\r\n        parentCommentId: _id, // 부모 댓글의 ID를 전달\r\n      });\r\n      setReplyList([...replyList, response.data]);\r\n      setReplyText('');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CommentItemBlock> \r\n      <p className=\"comment\">{text}</p>\r\n      <p className=\"comment\">작성자 : {user.username} 작성날짜 :{new Date(createdAt).toLocaleDateString()}  <button onClick={() => handleRemove(_id)}>삭제</button></p>\r\n     \r\n\r\n      {replyList.map((reply) => (\r\n        <CommentItemBlock key={reply._id} style={{ marginLeft: '3rem',marginRight: '2rem',border:'1px solid #eeeeee'}}>\r\n          <p>{reply.text}</p>\r\n          <p>\r\n            작성자: {reply.user.username} 작성날짜:{' '}\r\n            {new Date(reply.createdAt).toLocaleDateString()}\r\n            {reply.user._id === loginuser._id && (\r\n              <button onClick={() => handleRemove(reply._id)}>삭제</button>\r\n            )}\r\n          </p>\r\n          \r\n        </CommentItemBlock>\r\n      ))}\r\n      {/* 대댓글 작성 폼 */}\r\n      <div style={{ marginLeft: '2rem' }}>\r\n        <textarea\r\n          placeholder=\"대댓글을 입력하세요\"\r\n          value={replyText}\r\n          onChange={(e) => setReplyText(e.target.value)}\r\n        />\r\n        <button onClick={handleReplySubmit}>등록</button>\r\n      \r\n      </div>\r\n    </CommentItemBlock>\r\n  );\r\n};\r\n\r\nconst CommentList = ({ comments,loginuser }) => {\r\n  //console.log('aaa');\r\n  const [commentList, setCommentList] = useState(comments);\r\n\r\n  const handleRemove = (id) => {\r\n    setCommentList(commentList.filter((comment) => comment._id !== id));\r\n  };\r\n  return (\r\n    <CommentListBlock>\r\n      <h4>댓글 리스트</h4>\r\n      {comments.map(comment => (\r\n        <CommentItem key={comment._id} comment={comment} loginuser={loginuser} onRemove={handleRemove}/>\r\n      ))}\r\n    </CommentListBlock>\r\n  );\r\n};\r\n\r\nexport default CommentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}