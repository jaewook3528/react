{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\containers\\\\post\\\\PostViewerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport CommentList from '../../components/post/CommentList';\nimport CommentForm from '../../components/post/CommentForm';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost, listComments } from '../../lib/api/posts';\nconst PostViewerContainer = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const {\n    post,\n    comments,\n    error,\n    loading,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      post,\n      loading,\n      user\n    } = _ref2;\n    return {\n      post: post.post,\n      comments: post.comments,\n      error: post.error,\n      loading: loading['post/READ_POST'],\n      user: user.user\n    };\n  });\n  //const comments = useSelector(({ post }) => post.comments); \n\n  const onRemove = async () => {\n    try {\n      await removePost(postId);\n      history.push('/'); // 홈으로 이동\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    dispatch(readPost(postId));\n    dispatch(listComments(postId)); // 댓글 목록 불러오기\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  const onEdit = () => {\n    dispatch(setOriginalPost(post));\n    history.push('/write');\n  };\n  return /*#__PURE__*/React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    actionButtons: /*#__PURE__*/React.createElement(PostActionButtons, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }\n    }),\n    ownPost: user && user.id === post && post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), user && /*#__PURE__*/React.createElement(CommentForm, {\n    postId: postId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }));\n};\n_s(PostViewerContainer, \"8+XczvXT8lnOhP6D3QDESdXx67Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostViewerContainer;\nexport default _c2 = withRouter(PostViewerContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"PostViewerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostActionButtons","CommentList","CommentForm","setOriginalPost","removePost","listComments","PostViewerContainer","_ref","_s","match","history","postId","params","dispatch","post","comments","error","loading","user","_ref2","onRemove","push","e","console","log","onEdit","createElement","actionButtons","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ownPost","id","_c","_c2","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/containers/post/PostViewerContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost } from '../../modules/post';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport PostActionButtons from '../../components/post/PostActionButtons';\r\nimport CommentList from '../../components/post/CommentList';\r\nimport CommentForm from '../../components/post/CommentForm';\r\nimport { setOriginalPost } from '../../modules/write';\r\nimport { removePost, listComments } from '../../lib/api/posts';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n  const { postId } = match.params;\r\n  const dispatch = useDispatch();\r\n\r\n  const { post,comments,  error, loading, user } = useSelector(({ post, loading, user }) => ({\r\n    \r\n    post: post.post,\r\n    comments: post.comments,\r\n    error: post.error,\r\n    loading: loading['post/READ_POST'],\r\n    user: user.user,\r\n  }));\r\n  //const comments = useSelector(({ post }) => post.comments); \r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      history.push('/'); // 홈으로 이동\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    dispatch(listComments(postId)); // 댓글 목록 불러오기\r\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/write');\r\n  };\r\n\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={<PostActionButtons onEdit={onEdit} onRemove={onRemove} />}\r\n      ownPost={user && user.id === post && post.id}\r\n    >\r\n      <CommentList comments={comments} />\r\n      {user && <CommentForm postId={postId} />}\r\n    </PostViewer>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}