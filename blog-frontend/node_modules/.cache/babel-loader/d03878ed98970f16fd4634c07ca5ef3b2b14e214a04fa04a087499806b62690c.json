{"ast":null,"code":"import React,{useEffect}from'react';import WriteActionButtons from'../../components/write/WriteActionButtons';import{useSelector,useDispatch}from'react-redux';import{withRouter}from'react-router-dom';import{writePost,updatePost}from'../../modules/write';var WriteActionButtonsContainer=function WriteActionButtonsContainer(_ref){var history=_ref.history;var dispatch=useDispatch();var _useSelector=useSelector(function(_ref2){var write=_ref2.write;return{title:write.title,body:write.body,tags:write.tags,post:write.post,postError:write.postError,originalPostId:write.originalPostId};}),title=_useSelector.title,body=_useSelector.body,tags=_useSelector.tags,post=_useSelector.post,postError=_useSelector.postError,originalPostId=_useSelector.originalPostId;// 포스트 등록\nvar onPublish=function onPublish(){if(originalPostId){dispatch(updatePost({title:title,body:body,tags:tags,id:originalPostId}));return;}dispatch(writePost({title:title,body:body,tags:tags}));};// 취소\nvar onCancel=function onCancel(){history.goBack();};// 성공 혹은 실패 시 할 작업\nuseEffect(function(){if(post){var _id=post._id,user=post.user;history.push(\"/@\".concat(user.username,\"/\").concat(_id));}if(postError){console.log(postError);}},[history,post,postError]);return/*#__PURE__*/React.createElement(WriteActionButtons,{onPublish:onPublish,onCancel:onCancel,isEdit:!!originalPostId});};export default withRouter(WriteActionButtonsContainer);","map":{"version":3,"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","updatePost","WriteActionButtonsContainer","_ref","history","dispatch","_useSelector","_ref2","write","title","body","tags","post","postError","originalPostId","onPublish","id","onCancel","goBack","_id","user","push","concat","username","console","log","createElement","isEdit"],"sources":["C:/react/git/react/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { writePost, updatePost  } from '../../modules/write';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { title, body, tags, post, postError, originalPostId } = useSelector(\r\n    ({ write }) => ({\r\n      title: write.title,\r\n      body: write.body,\r\n      tags: write.tags,\r\n      post: write.post,\r\n      postError: write.postError,\r\n      originalPostId: write.originalPostId,\r\n    }),\r\n  );\r\n\r\n  // 포스트 등록\r\n  const onPublish = () => {\r\n    if (originalPostId) {\r\n      dispatch(updatePost({ title, body, tags, id: originalPostId }));\r\n      return;\r\n    }\r\n    dispatch(\r\n      writePost({\r\n        title,\r\n        body,\r\n        tags,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // 성공 혹은 실패 시 할 작업\r\n  useEffect(() => {\r\n    if (post) {\r\n      const { _id, user } = post;\r\n      history.push(`/@${user.username}/${_id}`);\r\n    }\r\n    if (postError) {\r\n      console.log(postError);\r\n    }\r\n  }, [history, post, postError]);\r\n  return (\r\n    <WriteActionButtons\r\n      onPublish={onPublish}\r\n      onCancel={onCancel}\r\n      isEdit={!!originalPostId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,kBAAkB,KAAM,2CAA2C,CAC1E,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,SAAS,CAAEC,UAAU,KAAS,qBAAqB,CAE5D,GAAM,CAAAC,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAAAC,IAAA,CAAoB,IAAd,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAC5C,GAAM,CAAAC,QAAQ,CAAGP,WAAW,EAAE,CAC9B,IAAAQ,YAAA,CAA+DT,WAAW,CACxE,SAAAU,KAAA,KAAG,CAAAC,KAAK,CAAAD,KAAA,CAALC,KAAK,OAAQ,CACdC,KAAK,CAAED,KAAK,CAACC,KAAK,CAClBC,IAAI,CAAEF,KAAK,CAACE,IAAI,CAChBC,IAAI,CAAEH,KAAK,CAACG,IAAI,CAChBC,IAAI,CAAEJ,KAAK,CAACI,IAAI,CAChBC,SAAS,CAAEL,KAAK,CAACK,SAAS,CAC1BC,cAAc,CAAEN,KAAK,CAACM,cACxB,CAAC,EAAC,CACH,CATOL,KAAK,CAAAH,YAAA,CAALG,KAAK,CAAEC,IAAI,CAAAJ,YAAA,CAAJI,IAAI,CAAEC,IAAI,CAAAL,YAAA,CAAJK,IAAI,CAAEC,IAAI,CAAAN,YAAA,CAAJM,IAAI,CAAEC,SAAS,CAAAP,YAAA,CAATO,SAAS,CAAEC,cAAc,CAAAR,YAAA,CAAdQ,cAAc,CAW1D;AACA,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,GAAID,cAAc,CAAE,CAClBT,QAAQ,CAACJ,UAAU,CAAC,CAAEQ,KAAK,CAALA,KAAK,CAAEC,IAAI,CAAJA,IAAI,CAAEC,IAAI,CAAJA,IAAI,CAAEK,EAAE,CAAEF,cAAe,CAAC,CAAC,CAAC,CAC/D,OACF,CACAT,QAAQ,CACNL,SAAS,CAAC,CACRS,KAAK,CAALA,KAAK,CACLC,IAAI,CAAJA,IAAI,CACJC,IAAI,CAAJA,IACF,CAAC,CAAC,CACH,CACH,CAAC,CAED;AACA,GAAM,CAAAM,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrBb,OAAO,CAACc,MAAM,EAAE,CAClB,CAAC,CAED;AACAvB,SAAS,CAAC,UAAM,CACd,GAAIiB,IAAI,CAAE,CACR,GAAQ,CAAAO,GAAG,CAAWP,IAAI,CAAlBO,GAAG,CAAEC,IAAI,CAAKR,IAAI,CAAbQ,IAAI,CACjBhB,OAAO,CAACiB,IAAI,MAAAC,MAAA,CAAMF,IAAI,CAACG,QAAQ,MAAAD,MAAA,CAAIH,GAAG,EAAG,CAC3C,CACA,GAAIN,SAAS,CAAE,CACbW,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC,CACxB,CACF,CAAC,CAAE,CAACT,OAAO,CAAEQ,IAAI,CAAEC,SAAS,CAAC,CAAC,CAC9B,mBACEnB,KAAA,CAAAgC,aAAA,CAAC9B,kBAAkB,EACjBmB,SAAS,CAAEA,SAAU,CACrBE,QAAQ,CAAEA,QAAS,CACnBU,MAAM,CAAE,CAAC,CAACb,cAAe,EACzB,CAEN,CAAC,CAED,cAAe,CAAAf,UAAU,CAACG,2BAA2B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}