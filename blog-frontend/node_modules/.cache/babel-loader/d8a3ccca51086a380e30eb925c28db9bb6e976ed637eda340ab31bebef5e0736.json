{"ast":null,"code":"import _slicedToArray from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{changeField,initializeForm,register}from'../../modules/auth';import AuthForm from'../../components/auth/AuthForm';import{check}from'../../modules/user';import{withRouter}from'react-router-dom';var RegisterForm=function RegisterForm(_ref){var history=_ref.history;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var dispatch=useDispatch();var _useSelector=useSelector(function(_ref2){var auth=_ref2.auth,user=_ref2.user;return{form:auth.register,auth:auth.auth,authError:auth.authError,user:user.user};}),form=_useSelector.form,auth=_useSelector.auth,authError=_useSelector.authError,user=_useSelector.user;// 인풋 변경 이벤트 핸들러\nvar onChange=function onChange(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;dispatch(changeField({form:'register',key:name,value:value}));};// 폼 등록 이벤트 핸들러\nvar onSubmit=function onSubmit(e){e.preventDefault();var username=form.username,password=form.password,passwordConfirm=form.passwordConfirm;// 하나라도 비어 있다면\nif([username,password,passwordConfirm].includes('')){setError('빈 칸을 모두 입력하세요.');return;}// 비밀번호가 일치하지 않는다면\nif(password!==passwordConfirm){setError('비밀번호가 일치하지 않습니다.');changeField({form:'register',key:'password',value:''});changeField({form:'register',key:'passwordConfirm',value:''});return;}dispatch(register({username:username,password:password}));};// 컴포넌트가 처음 렌더링될 때 form을 초기화함\nuseEffect(function(){dispatch(initializeForm('register'));},[dispatch]);// 회원가입 성공/실패 처리\nuseEffect(function(){if(authError){// 계정명이 이미 존재할 때\nif(authError.response.status===409){setError('이미 존재하는 계정명입니다.');return;}// 기타 이유\nsetError('회원가입 실패');return;}if(auth){console.log('회원가입 성공');console.log(auth);dispatch(check());}},[auth,authError,dispatch]);// user 값이 잘 설정되었는지 확인\nuseEffect(function(){if(user){console.log('check API 성공');console.log(user);history.push('/');// 홈 화면으로 이동\ntry{localStorage.setItem('user',JSON.stringify(user));}catch(e){console.log('localStorage is not working');}}},[history,user]);return/*#__PURE__*/React.createElement(AuthForm,{type:\"register\",form:form,onChange:onChange,onSubmit:onSubmit,error:error});};export default withRouter(RegisterForm);","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","check","withRouter","RegisterForm","_ref","history","_useState","_useState2","_slicedToArray","error","setError","dispatch","_useSelector","_ref2","auth","user","form","authError","onChange","e","_e$target","target","value","name","key","onSubmit","preventDefault","username","password","passwordConfirm","includes","response","status","console","log","push","localStorage","setItem","JSON","stringify","createElement","type"],"sources":["C:/react/git/react/blog-frontend/src/containers/auth/RegisterForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n        form: auth.register,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user\r\n      }));\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'register',\r\n        key: name,\r\n        value\r\n      })\r\n    );\r\n  };\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm } = form;\r\n    // 하나라도 비어 있다면\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      changeField({ form: 'register', key: 'password', value: '' });\r\n      changeField({ form: 'register', key: 'passwordConfirm', value: '' });\r\n      return;\r\n    }\r\n    dispatch(register({ username, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (authError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (authError.response.status === 409) {\r\n        setError('이미 존재하는 계정명입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n\r\n    if (auth) {\r\n      console.log('회원가입 성공');\r\n      console.log(auth);\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n          console.log('check API 성공');\r\n          console.log(user);\r\n          history.push('/'); // 홈 화면으로 이동\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n      }, [history, user]);\r\n\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);"],"mappings":"sHAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,CAAEC,cAAc,CAAEC,QAAQ,KAAQ,oBAAoB,CAC1E,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,OAASC,KAAK,KAAQ,oBAAoB,CAC1C,OAASC,UAAU,KAAQ,kBAAkB,CAE7C,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAoB,IAAd,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAC3B,IAAAC,SAAA,CAA0BZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,GAAM,CAAAI,QAAQ,CAAGhB,WAAW,EAAE,CAC9B,IAAAiB,YAAA,CAAwChB,WAAW,CAAC,SAAAiB,KAAA,KAAG,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,CAAEC,IAAI,CAAAF,KAAA,CAAJE,IAAI,OAAQ,CACrEC,IAAI,CAAEF,IAAI,CAACf,QAAQ,CACnBe,IAAI,CAAEA,IAAI,CAACA,IAAI,CACfG,SAAS,CAAEH,IAAI,CAACG,SAAS,CACzBF,IAAI,CAAEA,IAAI,CAACA,IACb,CAAC,EAAC,CAAC,CALGC,IAAI,CAAAJ,YAAA,CAAJI,IAAI,CAAEF,IAAI,CAAAF,YAAA,CAAJE,IAAI,CAAEG,SAAS,CAAAL,YAAA,CAATK,SAAS,CAAEF,IAAI,CAAAH,YAAA,CAAJG,IAAI,CAMrC;AACA,GAAM,CAAAG,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGC,CAAC,CAAI,CACpB,IAAAC,SAAA,CAAwBD,CAAC,CAACE,MAAM,CAAxBC,KAAK,CAAAF,SAAA,CAALE,KAAK,CAAEC,IAAI,CAAAH,SAAA,CAAJG,IAAI,CACnBZ,QAAQ,CACNd,WAAW,CAAC,CACVmB,IAAI,CAAE,UAAU,CAChBQ,GAAG,CAAED,IAAI,CACTD,KAAK,CAALA,KACF,CAAC,CAAC,CACH,CACH,CAAC,CAED;AACA,GAAM,CAAAG,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGN,CAAC,CAAI,CACpBA,CAAC,CAACO,cAAc,EAAE,CAClB,GAAQ,CAAAC,QAAQ,CAAgCX,IAAI,CAA5CW,QAAQ,CAAEC,QAAQ,CAAsBZ,IAAI,CAAlCY,QAAQ,CAAEC,eAAe,CAAKb,IAAI,CAAxBa,eAAe,CAC3C;AACA,GAAI,CAACF,QAAQ,CAAEC,QAAQ,CAAEC,eAAe,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAE,CACtDpB,QAAQ,CAAC,gBAAgB,CAAC,CAC1B,OACF,CACA;AACA,GAAIkB,QAAQ,GAAKC,eAAe,CAAE,CAChCnB,QAAQ,CAAC,kBAAkB,CAAC,CAC5Bb,WAAW,CAAC,CAAEmB,IAAI,CAAE,UAAU,CAAEQ,GAAG,CAAE,UAAU,CAAEF,KAAK,CAAE,EAAG,CAAC,CAAC,CAC7DzB,WAAW,CAAC,CAAEmB,IAAI,CAAE,UAAU,CAAEQ,GAAG,CAAE,iBAAiB,CAAEF,KAAK,CAAE,EAAG,CAAC,CAAC,CACpE,OACF,CACAX,QAAQ,CAACZ,QAAQ,CAAC,CAAE4B,QAAQ,CAARA,QAAQ,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAAC,CAAC,CAC5C,CAAC,CAED;AACAnC,SAAS,CAAC,UAAM,CACdkB,QAAQ,CAACb,cAAc,CAAC,UAAU,CAAC,CAAC,CACtC,CAAC,CAAE,CAACa,QAAQ,CAAC,CAAC,CAEd;AACAlB,SAAS,CAAC,UAAM,CACd,GAAIwB,SAAS,CAAE,CACb;AACA,GAAIA,SAAS,CAACc,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACrCtB,QAAQ,CAAC,iBAAiB,CAAC,CAC3B,OACF,CACA;AACAA,QAAQ,CAAC,SAAS,CAAC,CACnB,OACF,CAEA,GAAII,IAAI,CAAE,CACRmB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBD,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC,CACjBH,QAAQ,CAACV,KAAK,EAAE,CAAC,CACnB,CACF,CAAC,CAAE,CAACa,IAAI,CAAEG,SAAS,CAAEN,QAAQ,CAAC,CAAC,CAE7B;AACAlB,SAAS,CAAC,UAAM,CACZ,GAAIsB,IAAI,CAAE,CACRkB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAACnB,IAAI,CAAC,CACjBV,OAAO,CAAC8B,IAAI,CAAC,GAAG,CAAC,CAAE;AACjB,GAAI,CACAC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,CAAC,CACtD,CAAE,MAAOI,CAAC,CAAE,CACRc,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC9C,CACJ,CACF,CAAC,CAAE,CAAC7B,OAAO,CAAEU,IAAI,CAAC,CAAC,CAGvB,mBACEvB,KAAA,CAAAgD,aAAA,CAACxC,QAAQ,EACPyC,IAAI,CAAC,UAAU,CACfzB,IAAI,CAAEA,IAAK,CACXE,QAAQ,CAAEA,QAAS,CACnBO,QAAQ,CAAEA,QAAS,CACnBhB,KAAK,CAAEA,KAAM,EACb,CAEN,CAAC,CAED,cAAe,CAAAP,UAAU,CAACC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}