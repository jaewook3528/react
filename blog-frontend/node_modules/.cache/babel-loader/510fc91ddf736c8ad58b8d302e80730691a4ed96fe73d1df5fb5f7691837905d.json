{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\components\\\\posts\\\\PostList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n_c = PostListBlock;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\n_c2 = WritePostButtonWrapper;\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n_c3 = PostItemBlock;\nconst PostItem = _ref => {\n  let {\n    post\n  } = _ref;\n  const {\n    publishedDate,\n    user,\n    tags,\n    title,\n    body,\n    _id\n  } = post;\n  return /*#__PURE__*/React.createElement(PostItemBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/@${user.username}/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(SubInfo, {\n    username: user.username,\n    publishedDate: new Date(publishedDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tags, {\n    tags: tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, body));\n};\n_c4 = PostItem;\nconst PostList = _ref2 => {\n  let {\n    posts,\n    loading,\n    error,\n    showWriteButton\n  } = _ref2;\n  // 에러 발생 시\n  if (error) {\n    return /*#__PURE__*/React.createElement(PostListBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  }\n  return /*#__PURE__*/React.createElement(PostListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WritePostButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, showWriteButton && /*#__PURE__*/React.createElement(Button, {\n    cyan: true,\n    to: \"/write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\")), !loading && posts && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))));\n};\n_c5 = PostList;\nexport default PostList;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PostListBlock\");\n$RefreshReg$(_c2, \"WritePostButtonWrapper\");\n$RefreshReg$(_c3, \"PostItemBlock\");\n$RefreshReg$(_c4, \"PostItem\");\n$RefreshReg$(_c5, \"PostList\");","map":{"version":3,"names":["React","styled","Link","Responsive","Button","palette","SubInfo","Tags","PostListBlock","_c","WritePostButtonWrapper","div","_c2","PostItemBlock","gray","_c3","PostItem","_ref","post","publishedDate","user","tags","title","body","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","username","Date","_c4","PostList","_ref2","posts","loading","error","showWriteButton","cyan","map","key","_c5","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/components/posts/PostList.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst WritePostButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n  /* 맨 위 포스트는 padding-top 없음 */\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[2]};\r\n  }\r\n\r\n  h2 {\r\n    font-size: 2rem;\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    &:hover {\r\n      color: ${palette.gray[6]};\r\n    }\r\n  }\r\n  p {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst PostItem = ({ post }) => {\r\n    const { publishedDate, user, tags, title, body, _id } = post;\r\n    return (\r\n      <PostItemBlock>\r\n        <h2>\r\n          <Link to={`/@${user.username}/${_id}`}>{title}</Link>\r\n        </h2>\r\n        <SubInfo\r\n          username={user.username}\r\n          publishedDate={new Date(publishedDate)}\r\n        />\r\n        <Tags tags={tags} />\r\n        <p>{body}</p>\r\n      </PostItemBlock>\r\n    );\r\n  };\r\n\r\n  const PostList = ({ posts, loading, error, showWriteButton }) => {\r\n    // 에러 발생 시\r\n    if (error) {\r\n      return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\r\n    }\r\n  \r\n    return (\r\n      <PostListBlock>\r\n        <WritePostButtonWrapper>\r\n          {showWriteButton && (\r\n            <Button cyan to=\"/write\">\r\n              새 글 작성하기\r\n            </Button>\r\n          )}\r\n        </WritePostButtonWrapper>\r\n        {/*  로딩 중이 아니고, 포스트 배열이 존재할 때만 보여 줌 */}\r\n        {!loading && posts && (\r\n          <div>\r\n            {posts.map(post => (\r\n              <PostItem post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PostListBlock>\r\n    );\r\n  };\r\n\r\nexport default PostList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}