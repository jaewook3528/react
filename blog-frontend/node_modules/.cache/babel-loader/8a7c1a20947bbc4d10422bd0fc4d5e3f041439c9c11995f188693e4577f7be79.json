{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\containers\\\\posts\\\\PostListContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\nconst PostListContainer = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    posts,\n    error,\n    loading,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      posts,\n      loading,\n      user\n    } = _ref2;\n    return {\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    const handleScroll = () => {\n      const {\n        innerHeight\n      } = window;\n      const {\n        scrollHeight\n      } = document.body;\n      if (window.scrollY + innerHeight >= scrollHeight - 100 && !loading) {\n        const {\n          tag,\n          username,\n          page\n        } = qs.parse(location.search, {\n          ignoreQueryPrefix: true\n        });\n        dispatch(listPosts({\n          tag,\n          username,\n          page,\n          append: true\n        }));\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [dispatch, location.search, loading]);\n  return /*#__PURE__*/React.createElement(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n};\n_s(PostListContainer, \"dkcIZhoIDoAuP2q6RhQaDpzcvjI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostListContainer;\nexport default _c2 = withRouter(PostListContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"PostListContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","_ref","_s","location","dispatch","posts","error","loading","user","_ref2","handleScroll","innerHeight","window","scrollHeight","document","body","scrollY","tag","username","page","parse","search","ignoreQueryPrefix","append","addEventListener","removeEventListener","createElement","showWriteButton","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/containers/posts/PostListContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostList from '../../components/posts/PostList';\r\nimport { listPosts } from '../../modules/posts';\r\n\r\nconst PostListContainer = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const { posts, error, loading, user } = useSelector(\r\n    ({ posts, loading, user }) => ({\r\n      posts: posts.posts,\r\n      error: posts.error,\r\n      loading: loading['posts/LIST_POSTS'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const { innerHeight } = window;\r\n      const { scrollHeight } = document.body;\r\n\r\n      if (window.scrollY + innerHeight >= scrollHeight - 100 && !loading) {\r\n        const { tag, username, page } = qs.parse(location.search, {\r\n          ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({ tag, username, page, append: true }));\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [dispatch, location.search, loading]);\r\n\r\n  return (\r\n    <PostList\r\n      loading={loading}\r\n      error={error}\r\n      posts={posts}\r\n      showWriteButton={user}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,EAAE,MAAM,IAAI;AACnB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,MAAMC,iBAAiB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAMG,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,KAAK;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGX,WAAW,CACjDY,KAAA;IAAA,IAAC;MAAEJ,KAAK;MAAEE,OAAO;MAAEC;IAAK,CAAC,GAAAC,KAAA;IAAA,OAAM;MAC7BJ,KAAK,EAAEA,KAAK,CAACA,KAAK;MAClBC,KAAK,EAAED,KAAK,CAACC,KAAK;MAClBC,OAAO,EAAEA,OAAO,CAAC,kBAAkB,CAAC;MACpCC,IAAI,EAAEA,IAAI,CAACA;IACb,CAAC;EAAA,CAAC,CACH;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAM;QAAEC;MAAY,CAAC,GAAGC,MAAM;MAC9B,MAAM;QAAEC;MAAa,CAAC,GAAGC,QAAQ,CAACC,IAAI;MAEtC,IAAIH,MAAM,CAACI,OAAO,GAAGL,WAAW,IAAIE,YAAY,GAAG,GAAG,IAAI,CAACN,OAAO,EAAE;QAClE,MAAM;UAAEU,GAAG;UAAEC,QAAQ;UAAEC;QAAK,CAAC,GAAGzB,EAAE,CAAC0B,KAAK,CAACjB,QAAQ,CAACkB,MAAM,EAAE;UACxDC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFlB,QAAQ,CAACL,SAAS,CAAC;UAAEkB,GAAG;UAAEC,QAAQ;UAAEC,IAAI;UAAEI,MAAM,EAAE;QAAK,CAAC,CAAC,CAAC;MAC5D;IACF,CAAC;IAEDX,MAAM,CAACY,gBAAgB,CAAC,QAAQ,EAAEd,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXE,MAAM,CAACa,mBAAmB,CAAC,QAAQ,EAAEf,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACN,QAAQ,EAAED,QAAQ,CAACkB,MAAM,EAAEd,OAAO,CAAC,CAAC;EAExC,oBACEf,KAAA,CAAAkC,aAAA,CAAC5B,QAAQ;IACPS,OAAO,EAAEA,OAAQ;IACjBD,KAAK,EAAEA,KAAM;IACbD,KAAK,EAAEA,KAAM;IACbsB,eAAe,EAAEnB,IAAK;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACtB;AAEN,CAAC;AAAC/B,EAAA,CAvCIF,iBAAiB;EAAA,QACJJ,WAAW,EACYC,WAAW;AAAA;AAAAqC,EAAA,GAF/ClC,iBAAiB;AAyCvB,eAAAmC,GAAA,GAAexC,UAAU,CAACK,iBAAiB,CAAC;AAAC,IAAAkC,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}