{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [READ_POST, READ_POST_SUCCESS, READ_POST_FAILURE] = createRequestActionTypes('post/READ_POST');\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 비우기\n\nexport const readPost = createAction(READ_POST, id => id);\nexport const unloadPost = createAction(UNLOAD_POST);\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n}\nconst initialState = {\n  post: null,\n  error: null\n};\nconst post = handleActions({\n  [READ_POST_SUCCESS]: (state, _ref) => {\n    let {\n      payload: post\n    } = _ref;\n    return {\n      ...state,\n      post\n    };\n  },\n  [READ_POST_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return {\n      ...state,\n      error\n    };\n  },\n  [UNLOAD_POST]: () => initialState\n}, initialState);\nexport default post;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UNLOAD_POST","readPost","id","unloadPost","readPostSaga","postSaga","initialState","post","error","state","_ref","payload","_ref2"],"sources":["C:/react/git/react/blog-frontend/src/modules/post.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 비우기\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\r\nexport function* postSaga() {\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n  post: null,\r\n  error: null,\r\n};\r\n\r\nconst post = handleActions(\r\n  {\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [UNLOAD_POST]: () => initialState,\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3D,OAAOC,iBAAiB,IACtBC,wBAAwB,QACnB,0BAA0B;AACjC,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAM,CACJC,SAAS,EACTC,iBAAiB,EACjBC,iBAAiB,CAClB,GAAGL,wBAAwB,CAAC,gBAAgB,CAAC;AAC9C,MAAMM,WAAW,GAAG,kBAAkB,CAAC,CAAC;;AAExC,OAAO,MAAMC,QAAQ,GAAGV,YAAY,CAACM,SAAS,EAAEK,EAAE,IAAIA,EAAE,CAAC;AACzD,OAAO,MAAMC,UAAU,GAAGZ,YAAY,CAACS,WAAW,CAAC;AAEnD,MAAMI,YAAY,GAAGX,iBAAiB,CAACI,SAAS,EAAEF,QAAQ,CAACM,QAAQ,CAAC;AACpE,OAAO,UAAUI,QAAQA,CAAA,EAAG;EAC1B,MAAMT,UAAU,CAACC,SAAS,EAAEO,YAAY,CAAC;AAC3C;AAEA,MAAME,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMD,IAAI,GAAGf,aAAa,CACxB;EACE,CAACM,iBAAiB,GAAG,CAACW,KAAK,EAAAC,IAAA;IAAA,IAAE;MAAEC,OAAO,EAAEJ;IAAK,CAAC,GAAAG,IAAA;IAAA,OAAM;MAClD,GAAGD,KAAK;MACRF;IACF,CAAC;EAAA,CAAC;EACF,CAACR,iBAAiB,GAAG,CAACU,KAAK,EAAAG,KAAA;IAAA,IAAE;MAAED,OAAO,EAAEH;IAAM,CAAC,GAAAI,KAAA;IAAA,OAAM;MACnD,GAAGH,KAAK;MACRD;IACF,CAAC;EAAA,CAAC;EACF,CAACR,WAAW,GAAG,MAAMM;AACvB,CAAC,EACDA,YAAY,CACb;AAED,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}