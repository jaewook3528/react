{"ast":null,"code":"import _toConsumableArray from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState,useCallback,useEffect}from'react';import styled from'styled-components';import palette from'../../lib/styles/palette';var TagBoxBlock=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  border-top: 1px solid \",\";\\n  padding-top: 2rem;\\n\\n  h4 {\\n    color: \",\"\\n    margin-top: 0;\\n    margin-bottom: 0.5rem;\\n  }\\n\"])),palette.gray[2],palette.gray[8]);var TagForm=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-radius: 4px;\\n  overflow: hidden;\\n  display: flex;\\n  width: 256px;\\n  border: 1px solid \",\"; /* \\uC2A4\\uD0C0\\uC77C \\uCD08\\uAE30\\uD654 */\\n  input,\\n  button {\\n    outline: none;\\n    border: none;\\n    font-size: 1rem;\\n  }\\n\\n  input {\\n    padding: 0.5rem;\\n    flex: 1;\\n  }\\nbutton {\\n  cursor: pointer;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n    border: none;\\n    background: \",\";\\n    color: white;\\n    font-weight: bold;\\n    &:hover {\\n      background: \",\";\\n    }\\n  }\\n\"])),palette.gray[9],palette.gray[8],palette.gray[6]);var Tag=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-right: 0.5rem;\\n  color: \",\";\\n  cursor: pointer;\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"])),palette.gray[6]);var TagListBlock=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 0.5rem;\\n\"])));// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\nvar TagItem=/*#__PURE__*/React.memo(function(_ref){var tag=_ref.tag,onRemove=_ref.onRemove;return/*#__PURE__*/React.createElement(Tag,{onClick:function onClick(){return onRemove(tag);}},\"#\",tag);});// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\nvar TagList=/*#__PURE__*/React.memo(function(_ref2){var tags=_ref2.tags,onRemove=_ref2.onRemove;return/*#__PURE__*/React.createElement(TagListBlock,null,tags.map(function(tag){return/*#__PURE__*/React.createElement(TagItem,{key:tag,tag:tag,onRemove:onRemove});}));});var TagBox=function TagBox(_ref3){var tags=_ref3.tags,onChangeTags=_ref3.onChangeTags;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),localTags=_useState4[0],setLocalTags=_useState4[1];var insertTag=useCallback(function(tag){if(!tag)return;// 공백이라면 추가하지 않음 \nif(localTags.includes(tag))return;// 이미 존재한다면 추가하지 않음\nvar nextTags=[].concat(_toConsumableArray(localTags),[tag]);setLocalTags(nextTags);onChangeTags(nextTags);},[localTags,onChangeTags]);var onRemove=useCallback(function(tag){var nextTags=localTags.filter(function(t){return t!==tag;});setLocalTags(nextTags);onChangeTags(nextTags);},[localTags,onChangeTags]);var onChange=useCallback(function(e){setInput(e.target.value);},[]);var onSubmit=useCallback(function(e){e.preventDefault();insertTag(input.trim());// 앞뒤 공백을 없앤 후 등록\nsetInput('');// input 초기화\n},[input,insertTag]);// tags 값이 바뀔 때\nuseEffect(function(){setLocalTags(tags);},[tags]);return/*#__PURE__*/React.createElement(TagBoxBlock,null,/*#__PURE__*/React.createElement(\"h4\",null,\"\\uD0DC\\uADF8\"),/*#__PURE__*/React.createElement(TagForm,{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"input\",{placeholder:\"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:input,onChange:onChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\uCD94\\uAC00\")),/*#__PURE__*/React.createElement(TagList,{tags:localTags,onRemove:onRemove}));};export default TagBox;","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","palette","TagBoxBlock","div","_templateObject","_taggedTemplateLiteral","gray","TagForm","form","_templateObject2","Tag","_templateObject3","TagListBlock","_templateObject4","TagItem","memo","_ref","tag","onRemove","createElement","onClick","TagList","_ref2","tags","map","key","TagBox","_ref3","onChangeTags","_useState","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","localTags","setLocalTags","insertTag","includes","nextTags","concat","_toConsumableArray","filter","t","onChange","e","target","value","onSubmit","preventDefault","trim","placeholder","type"],"sources":["C:/react/git/react/blog-frontend/src/components/write/TagBox.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]}\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n  }\r\nbutton {\r\n  cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${palette.gray[6]};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n  ));\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n    <TagListBlock>\r\n      {tags.map(tag => (\r\n        <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n      ))}\r\n    </TagListBlock>\r\n));\r\n\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n  \r\n    const insertTag = useCallback(\r\n      tag => {\r\n        if (!tag) return; // 공백이라면 추가하지 않음 \r\n        if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\r\n        const nextTags = [...localTags, tag];\r\n        setLocalTags(nextTags);\r\n        onChangeTags(nextTags);\r\n      },\r\n      [localTags, onChangeTags],\r\n    );\r\n  \r\n    const onRemove = useCallback(\r\n      tag => {\r\n        const nextTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(nextTags);\r\n        onChangeTags(nextTags);\r\n      },\r\n      [localTags, onChangeTags],\r\n    );\r\n  \r\n    const onChange = useCallback(e => {\r\n      setInput(e.target.value);\r\n    }, []);\r\n  \r\n    const onSubmit = useCallback(\r\n      e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\r\n        setInput(''); // input 초기화\r\n      },\r\n      [input, insertTag],\r\n    );\r\n  \r\n    // tags 값이 바뀔 때\r\n    useEffect(() => {\r\n      setLocalTags(tags);\r\n    }, [tags]);\r\n  \r\n    return (\r\n      <TagBoxBlock>\r\n        <h4>태그</h4>\r\n        <TagForm onSubmit={onSubmit}>\r\n          <input\r\n            placeholder=\"태그를 입력하세요\"\r\n            value={input}\r\n            onChange={onChange}\r\n          />\r\n          <button type=\"submit\">추가</button>\r\n        </TagForm>\r\n        <TagList tags={localTags} onRemove={onRemove} />\r\n      </TagBoxBlock>\r\n    );\r\n};\r\n\r\nexport default TagBox;"],"mappings":"icAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC/D,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAE9C,GAAM,CAAAC,WAAW,CAAGF,MAAM,CAACG,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,6JAEJJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAI5BL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAI3B,CAED,GAAM,CAAAC,OAAO,CAAGP,MAAM,CAACQ,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,qgBAKLJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAiBnBL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAIbL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAGlC,CAED,GAAM,CAAAI,GAAG,CAAGV,MAAM,CAACG,GAAG,CAAAQ,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,2GAEXJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAKzB,CAED,GAAM,CAAAM,YAAY,CAAGZ,MAAM,CAACG,GAAG,CAAAU,gBAAA,GAAAA,gBAAA,CAAAR,sBAAA,mDAG9B,CAED;AACA,GAAM,CAAAS,OAAO,cAAGlB,KAAK,CAACmB,IAAI,CAAC,SAAAC,IAAA,KAAG,CAAAC,GAAG,CAAAD,IAAA,CAAHC,GAAG,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,oBACvCtB,KAAA,CAAAuB,aAAA,CAACT,GAAG,EAACU,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAF,QAAQ,CAACD,GAAG,CAAC,EAAC,EAAC,GAAC,CAACA,GAAG,CAAO,EAChD,CAAC,CAEJ;AACA,GAAM,CAAAI,OAAO,cAAGzB,KAAK,CAACmB,IAAI,CAAC,SAAAO,KAAA,KAAG,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,CAAEL,QAAQ,CAAAI,KAAA,CAARJ,QAAQ,oBACxCtB,KAAA,CAAAuB,aAAA,CAACP,YAAY,MACVW,IAAI,CAACC,GAAG,CAAC,SAAAP,GAAG,qBACXrB,KAAA,CAAAuB,aAAA,CAACL,OAAO,EAACW,GAAG,CAAER,GAAI,CAACA,GAAG,CAAEA,GAAI,CAACC,QAAQ,CAAEA,QAAS,EAAG,EACpD,CAAC,CACW,EAClB,CAAC,CAGF,GAAM,CAAAQ,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,KAAA,CAA+B,IAAzB,CAAAJ,IAAI,CAAAI,KAAA,CAAJJ,IAAI,CAAEK,YAAY,CAAAD,KAAA,CAAZC,YAAY,CAChC,IAAAC,SAAA,CAA0BhC,QAAQ,CAAC,EAAE,CAAC,CAAAiC,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAkCrC,QAAQ,CAAC,EAAE,CAAC,CAAAsC,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE9B,GAAM,CAAAG,SAAS,CAAGxC,WAAW,CAC3B,SAAAmB,GAAG,CAAI,CACL,GAAI,CAACA,GAAG,CAAE,OAAQ;AAClB,GAAImB,SAAS,CAACG,QAAQ,CAACtB,GAAG,CAAC,CAAE,OAAQ;AACrC,GAAM,CAAAuB,QAAQ,IAAAC,MAAA,CAAAC,kBAAA,CAAON,SAAS,GAAEnB,GAAG,EAAC,CACpCoB,YAAY,CAACG,QAAQ,CAAC,CACtBZ,YAAY,CAACY,QAAQ,CAAC,CACxB,CAAC,CACD,CAACJ,SAAS,CAAER,YAAY,CAAC,CAC1B,CAED,GAAM,CAAAV,QAAQ,CAAGpB,WAAW,CAC1B,SAAAmB,GAAG,CAAI,CACL,GAAM,CAAAuB,QAAQ,CAAGJ,SAAS,CAACO,MAAM,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,GAAK3B,GAAG,GAAC,CACjDoB,YAAY,CAACG,QAAQ,CAAC,CACtBZ,YAAY,CAACY,QAAQ,CAAC,CACxB,CAAC,CACD,CAACJ,SAAS,CAAER,YAAY,CAAC,CAC1B,CAED,GAAM,CAAAiB,QAAQ,CAAG/C,WAAW,CAAC,SAAAgD,CAAC,CAAI,CAChCb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,QAAQ,CAAGnD,WAAW,CAC1B,SAAAgD,CAAC,CAAI,CACHA,CAAC,CAACI,cAAc,EAAE,CAClBZ,SAAS,CAACN,KAAK,CAACmB,IAAI,EAAE,CAAC,CAAE;AACzBlB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CACD,CAACD,KAAK,CAAEM,SAAS,CAAC,CACnB,CAED;AACAvC,SAAS,CAAC,UAAM,CACdsC,YAAY,CAACd,IAAI,CAAC,CACpB,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV,mBACE3B,KAAA,CAAAuB,aAAA,CAACjB,WAAW,mBACVN,KAAA,CAAAuB,aAAA,WAAI,cAAE,CAAK,cACXvB,KAAA,CAAAuB,aAAA,CAACZ,OAAO,EAAC0C,QAAQ,CAAEA,QAAS,eAC1BrD,KAAA,CAAAuB,aAAA,UACEiC,WAAW,CAAC,mDAAW,CACvBJ,KAAK,CAAEhB,KAAM,CACba,QAAQ,CAAEA,QAAS,EACnB,cACFjD,KAAA,CAAAuB,aAAA,WAAQkC,IAAI,CAAC,QAAQ,EAAC,cAAE,CAAS,CACzB,cACVzD,KAAA,CAAAuB,aAAA,CAACE,OAAO,EAACE,IAAI,CAAEa,SAAU,CAAClB,QAAQ,CAAEA,QAAS,EAAG,CACpC,CAEpB,CAAC,CAED,cAAe,CAAAQ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}