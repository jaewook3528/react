{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/react/git/react/blog-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{Link}from'react-router-dom';import Responsive from'../common/Responsive';import Button from'../common/Button';import palette from'../../lib/styles/palette';import SubInfo from'../common/SubInfo';import Tags from'../common/Tags';var PostListBlock=styled(Responsive)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n\"])));var WritePostButtonWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  margin-bottom: 3rem;\\n\"])));var PostItemBlock=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n  /* \\uB9E8 \\uC704 \\uD3EC\\uC2A4\\uD2B8\\uB294 padding-top \\uC5C6\\uC74C */\\n  &:first-child {\\n    padding-top: 0;\\n  }\\n  & + & {\\n    border-top: 1px solid \",\";\\n  }\\n\\n  h2 {\\n    font-size: 2rem;\\n    margin-bottom: 0;\\n    margin-top: 0;\\n    &:hover {\\n      color: \",\";\\n    }\\n  }\\n  p {\\n    margin-top: 2rem;\\n  }\\n\"])),palette.gray[2],palette.gray[6]);var PostItem=function PostItem(_ref){var post=_ref.post;var publishedDate=post.publishedDate,user=post.user,tags=post.tags,title=post.title,body=post.body,_id=post._id;return/*#__PURE__*/React.createElement(PostItemBlock,null,/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(Link,{to:\"/@\".concat(user.username,\"/\").concat(_id)},title)),/*#__PURE__*/React.createElement(SubInfo,{username:user.username,publishedDate:new Date(publishedDate)}),/*#__PURE__*/React.createElement(Tags,{tags:tags}),/*#__PURE__*/React.createElement(\"p\",null,body));};var PostList=function PostList(_ref2){var posts=_ref2.posts,loading=_ref2.loading,error=_ref2.error,showWriteButton=_ref2.showWriteButton;// 에러 발생 시\nif(error){return/*#__PURE__*/React.createElement(PostListBlock,null,\"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");}return/*#__PURE__*/React.createElement(PostListBlock,null,/*#__PURE__*/React.createElement(WritePostButtonWrapper,null,showWriteButton&&/*#__PURE__*/React.createElement(Button,{cyan:true,to:\"/write\"},\"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\")),!loading&&posts&&/*#__PURE__*/React.createElement(\"div\",null,posts.map(function(post){return/*#__PURE__*/React.createElement(PostItem,{post:post,key:post._id});})));};export default PostList;","map":{"version":3,"names":["React","styled","Link","Responsive","Button","palette","SubInfo","Tags","PostListBlock","_templateObject","_taggedTemplateLiteral","WritePostButtonWrapper","div","_templateObject2","PostItemBlock","_templateObject3","gray","PostItem","_ref","post","publishedDate","user","tags","title","body","_id","createElement","to","concat","username","Date","PostList","_ref2","posts","loading","error","showWriteButton","cyan","map","key"],"sources":["C:/react/git/react/blog-frontend/src/components/posts/PostList.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst WritePostButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n  /* 맨 위 포스트는 padding-top 없음 */\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[2]};\r\n  }\r\n\r\n  h2 {\r\n    font-size: 2rem;\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    &:hover {\r\n      color: ${palette.gray[6]};\r\n    }\r\n  }\r\n  p {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst PostItem = ({ post }) => {\r\n    const { publishedDate, user, tags, title, body, _id } = post;\r\n    return (\r\n      <PostItemBlock>\r\n        <h2>\r\n          <Link to={`/@${user.username}/${_id}`}>{title}</Link>\r\n        </h2>\r\n        <SubInfo\r\n          username={user.username}\r\n          publishedDate={new Date(publishedDate)}\r\n        />\r\n        <Tags tags={tags} />\r\n        <p>{body}</p>\r\n      </PostItemBlock>\r\n    );\r\n  };\r\n\r\n  const PostList = ({ posts, loading, error, showWriteButton }) => {\r\n    // 에러 발생 시\r\n    if (error) {\r\n      return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\r\n    }\r\n  \r\n    return (\r\n      <PostListBlock>\r\n        <WritePostButtonWrapper>\r\n          {showWriteButton && (\r\n            <Button cyan to=\"/write\">\r\n              새 글 작성하기\r\n            </Button>\r\n          )}\r\n        </WritePostButtonWrapper>\r\n        {/*  로딩 중이 아니고, 포스트 배열이 존재할 때만 보여 줌 */}\r\n        {!loading && posts && (\r\n          <div>\r\n            {posts.map(post => (\r\n              <PostItem post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PostListBlock>\r\n    );\r\n  };\r\n\r\nexport default PostList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}