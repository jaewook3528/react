{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return {\n      ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return {\n      ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return {\n      ...state,\n      user: null,\n      checkError: error\n    };\n  }\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","userSaga","initialState","checkError","state","_ref","payload","_ref2","_ref3","error"],"sources":["C:/react/project/blog-frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  }\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3D,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAC1C,OAAOC,iBAAiB,IACtBC,wBAAwB,QACnB,0BAA0B;AAEjC,MAAMC,aAAa,GAAG,oBAAoB,CAAC,CAAC;AAC5C;AACA,MAAM,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAGJ,wBAAwB,CACpE,YAAY,CACb;AAED,OAAO,MAAMK,WAAW,GAAGV,YAAY,CAACM,aAAa,EAAEK,IAAI,IAAIA,IAAI,CAAC;AACpE,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACO,KAAK,CAAC;AAExC,MAAMM,SAAS,GAAGT,iBAAiB,CAACG,KAAK,EAAEJ,OAAO,CAACS,KAAK,CAAC;AAEzD,SAASE,gBAAgBA,CAAA,EAAG;EAC1B,IAAI;IACFC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C;AACF;AACA,OAAO,UAAUC,QAAQA,CAAA,EAAG;EACxB,MAAMlB,UAAU,CAACK,KAAK,EAAEM,SAAS,CAAC;EAClC,MAAMX,UAAU,CAACO,aAAa,EAAEK,gBAAgB,CAAC;AACnD;AAEF,MAAMO,YAAY,GAAG;EACnBV,IAAI,EAAE,IAAI;EACVW,UAAU,EAAE;AACd,CAAC;AAED,eAAerB,aAAa,CAC1B;EACE,CAACK,aAAa,GAAG,CAACiB,KAAK,EAAAC,IAAA;IAAA,IAAE;MAAEC,OAAO,EAAEd;IAAK,CAAC,GAAAa,IAAA;IAAA,OAAM;MAC9C,GAAGD,KAAK;MACRZ;IACF,CAAC;EAAA,CAAC;EACF,CAACH,aAAa,GAAG,CAACe,KAAK,EAAAG,KAAA;IAAA,IAAE;MAAED,OAAO,EAAEd;IAAK,CAAC,GAAAe,KAAA;IAAA,OAAM;MAC9C,GAAGH,KAAK;MACRZ,IAAI;MACJW,UAAU,EAAE;IACd,CAAC;EAAA,CAAC;EACF,CAACb,aAAa,GAAG,CAACc,KAAK,EAAAI,KAAA;IAAA,IAAE;MAAEF,OAAO,EAAEG;IAAM,CAAC,GAAAD,KAAA;IAAA,OAAM;MAC/C,GAAGJ,KAAK;MACRZ,IAAI,EAAE,IAAI;MACVW,UAAU,EAAEM;IACd,CAAC;EAAA;AACH,CAAC,EACDP,YAAY,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}