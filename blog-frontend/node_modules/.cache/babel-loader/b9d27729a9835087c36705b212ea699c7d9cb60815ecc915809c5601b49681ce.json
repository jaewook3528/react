{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\containers\\\\post\\\\PostViewerContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nconst PostViewerContainer = _ref => {\n  _s();\n  let {\n    match\n  } = _ref;\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading\n  } = useSelector(_ref2 => {\n    let {\n      post,\n      loading\n    } = _ref2;\n    return {\n      post: post.post,\n      error: post.error,\n      loading: loading['post/READ_POST']\n    };\n  });\n  useEffect(() => {\n    dispatch(readPost(postId));\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return /*#__PURE__*/React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n};\n_s(PostViewerContainer, \"vb4c2O5IgOlif/fkeMzCaw43qPI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostViewerContainer;\nexport default _c2 = withRouter(PostViewerContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"PostViewerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostViewerContainer","_ref","_s","match","postId","params","dispatch","post","error","loading","_ref2","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/containers/post/PostViewerContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost } from '../../modules/post';\r\nimport PostViewer from '../../components/post/PostViewer';\r\n\r\nconst PostViewerContainer = ({ match }) => {\r\n  // 처음 마운트될 때 포스트 읽기 API 요청\r\n  const { postId } = match.params;\r\n  const dispatch = useDispatch();\r\n  const { post, error, loading } = useSelector(({ post, loading }) => ({\r\n    post: post.post,\r\n    error: post.error,\r\n    loading: loading['post/READ_POST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  return <PostViewer post={post} loading={loading} error={error} />;\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,UAAU,QAAQ,oBAAoB;AACzD,OAAOC,UAAU,MAAM,kCAAkC;AAEzD,MAAMC,mBAAmB,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACpC;EACA,MAAM;IAAEG;EAAO,CAAC,GAAGD,KAAK,CAACE,MAAM;EAC/B,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM;IAAEa,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGd,WAAW,CAACe,KAAA;IAAA,IAAC;MAAEH,IAAI;MAAEE;IAAQ,CAAC,GAAAC,KAAA;IAAA,OAAM;MACnEH,IAAI,EAAEA,IAAI,CAACA,IAAI;MACfC,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBC,OAAO,EAAEA,OAAO,CAAC,gBAAgB;IACnC,CAAC;EAAA,CAAC,CAAC;EAEHhB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,QAAQ,CAACO,MAAM,CAAC,CAAC;IAC1B;IACA,OAAO,MAAM;MACXE,QAAQ,CAACR,UAAU,EAAE,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACQ,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAEtB,oBAAOZ,KAAA,CAAAmB,aAAA,CAACZ,UAAU;IAACQ,IAAI,EAAEA,IAAK;IAACE,OAAO,EAAEA,OAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG;AACnE,CAAC;AAACf,EAAA,CAnBIF,mBAAmB;EAAA,QAGNN,WAAW,EACKC,WAAW;AAAA;AAAAuB,EAAA,GAJxClB,mBAAmB;AAqBzB,eAAAmB,GAAA,GAAevB,UAAU,CAACI,mBAAmB,CAAC;AAAC,IAAAkB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}