{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\project\\\\react\\\\blog-frontend\\\\src\\\\components\\\\write\\\\TagBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n\n  h4 {\n    color: ${palette.gray[8]}\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n_c = TagBoxBlock;\nconst TagForm = styled.form`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n\n  input {\n    padding: 0.5rem;\n    flex: 1;\n  }\nbutton {\n  cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: white;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n_c2 = TagForm;\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c3 = Tag;\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\n_c4 = TagListBlock;\nconst TagItem = /*#__PURE__*/React.memo(_c5 = _ref => {\n  let {\n    tag,\n    onRemove\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Tag, {\n    onClick: () => onRemove(tag),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"#\", tag);\n});\n\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\n_c6 = TagItem;\nconst TagList = /*#__PURE__*/React.memo(_c7 = _ref2 => {\n  let {\n    tags,\n    onRemove\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(TagListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, tags.map(tag => /*#__PURE__*/React.createElement(TagItem, {\n    key: tag,\n    tag: tag,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n});\n_c8 = TagList;\nconst TagBox = _ref3 => {\n  _s();\n  let {\n    tags,\n    onChangeTags\n  } = _ref3;\n  const [input, setInput] = useState('');\n  const [localTags, setLocalTags] = useState([]);\n  const insertTag = useCallback(tag => {\n    if (!tag) return; // 공백이라면 추가하지 않음 \n    if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\n    const nextTags = [...localTags, tag];\n    setLocalTags(nextTags);\n    onChangeTags(nextTags);\n  }, [localTags, onChangeTags]);\n  const onRemove = useCallback(tag => {\n    const nextTags = localTags.filter(t => t !== tag);\n    setLocalTags(nextTags);\n    onChangeTags(nextTags);\n  }, [localTags, onChangeTags]);\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\n    setInput(''); // input 초기화\n  }, [input, insertTag]);\n\n  // tags 값이 바뀔 때\n  useEffect(() => {\n    setLocalTags(tags);\n  }, [tags]);\n  return /*#__PURE__*/React.createElement(TagBoxBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"\\uD0DC\\uADF8\"), /*#__PURE__*/React.createElement(TagForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    value: input,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"\\uCD94\\uAC00\")), /*#__PURE__*/React.createElement(TagList, {\n    tags: localTags,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }));\n};\n_s(TagBox, \"dVq9ZPZm44m7K2S9GiIBfXV43Yk=\");\n_c9 = TagBox;\nexport default TagBox;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"TagBoxBlock\");\n$RefreshReg$(_c2, \"TagForm\");\n$RefreshReg$(_c3, \"Tag\");\n$RefreshReg$(_c4, \"TagListBlock\");\n$RefreshReg$(_c5, \"TagItem$React.memo\");\n$RefreshReg$(_c6, \"TagItem\");\n$RefreshReg$(_c7, \"TagList$React.memo\");\n$RefreshReg$(_c8, \"TagList\");\n$RefreshReg$(_c9, \"TagBox\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","palette","TagBoxBlock","div","gray","_c","TagForm","form","_c2","Tag","_c3","TagListBlock","_c4","TagItem","memo","_c5","_ref","tag","onRemove","createElement","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c6","TagList","_c7","_ref2","tags","map","key","_c8","TagBox","_ref3","_s","onChangeTags","input","setInput","localTags","setLocalTags","insertTag","includes","nextTags","filter","t","onChange","e","target","value","onSubmit","preventDefault","trim","placeholder","type","_c9","$RefreshReg$"],"sources":["C:/node/project/react/blog-frontend/src/components/write/TagBox.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]}\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n  }\r\nbutton {\r\n  cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${palette.gray[6]};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n  ));\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n    <TagListBlock>\r\n      {tags.map(tag => (\r\n        <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n      ))}\r\n    </TagListBlock>\r\n));\r\n\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n  \r\n    const insertTag = useCallback(\r\n      tag => {\r\n        if (!tag) return; // 공백이라면 추가하지 않음 \r\n        if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\r\n        const nextTags = [...localTags, tag];\r\n        setLocalTags(nextTags);\r\n        onChangeTags(nextTags);\r\n      },\r\n      [localTags, onChangeTags],\r\n    );\r\n  \r\n    const onRemove = useCallback(\r\n      tag => {\r\n        const nextTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(nextTags);\r\n        onChangeTags(nextTags);\r\n      },\r\n      [localTags, onChangeTags],\r\n    );\r\n  \r\n    const onChange = useCallback(e => {\r\n      setInput(e.target.value);\r\n    }, []);\r\n  \r\n    const onSubmit = useCallback(\r\n      e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\r\n        setInput(''); // input 초기화\r\n      },\r\n      [input, insertTag],\r\n    );\r\n  \r\n    // tags 값이 바뀔 때\r\n    useEffect(() => {\r\n      setLocalTags(tags);\r\n    }, [tags]);\r\n  \r\n    return (\r\n      <TagBoxBlock>\r\n        <h4>태그</h4>\r\n        <TagForm onSubmit={onSubmit}>\r\n          <input\r\n            placeholder=\"태그를 입력하세요\"\r\n            value={input}\r\n            onChange={onChange}\r\n          />\r\n          <button type=\"submit\">추가</button>\r\n        </TagForm>\r\n        <TagList tags={localTags} onRemove={onRemove} />\r\n      </TagBoxBlock>\r\n    );\r\n};\r\n\r\nexport default TagBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}