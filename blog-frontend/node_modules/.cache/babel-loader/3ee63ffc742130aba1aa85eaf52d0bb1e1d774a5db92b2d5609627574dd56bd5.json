{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\git\\\\react\\\\blog-frontend\\\\src\\\\components\\\\post\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writeComment } from '../../lib/api/posts';\nconst CommentFormBlock = styled.form`\n  h4 {\n    margin-bottom: 0.5rem;\n  }\n  textarea {\n    width: 100%;\n    padding: 1rem;\n    font-size: 1.125rem;\n    border: none;\n    border-bottom: 1px solid ${palette.gray[4]};\n    resize: none;\n    &:focus {\n      outline: none;\n      border-bottom: 1px solid ${palette.gray[6]};\n    }\n  }\n  button {\n    margin-top: 1rem;\n    float: right;\n  }\n`;\n_c = CommentFormBlock;\nconst CommentForm = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const [comment, setComment] = useState('');\n  const {\n    user\n  } = useSelector(_ref2 => {\n    let {\n      user\n    } = _ref2;\n    return {\n      user: user.user\n    };\n  });\n  const {\n    postId\n  } = match.params;\n  const onSubmit = async e => {\n    console.log(postId);\n    e.preventDefault();\n    if (!user) {\n      alert('로그인이 필요합니다.');\n      history.push('/login');\n      return;\n    }\n    try {\n      console.log(comment);\n      await writeComment({\n        postId,\n        text: comment,\n        user: user\n      });\n      setComment('');\n      // TODO: 포스트 다시 불러오기\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onChange = e => {\n    setComment(e.target.value);\n  };\n  return /*#__PURE__*/React.createElement(CommentFormBlock, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00 \\uC4F0\\uAE30\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: comment,\n    onChange: onChange,\n    placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uC138\\uC694.\",\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"\\uB4F1\\uB85D\"));\n};\n_s(CommentForm, \"PUDr6gl8iZOugs2j4N0/OMrRyjE=\", false, function () {\n  return [useSelector];\n});\n_c2 = CommentForm;\nexport default _c3 = withRouter(CommentForm);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CommentFormBlock\");\n$RefreshReg$(_c2, \"CommentForm\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useState","styled","palette","useSelector","withRouter","writeComment","CommentFormBlock","form","gray","_c","CommentForm","_ref","_s","match","history","comment","setComment","user","_ref2","postId","params","onSubmit","e","console","log","preventDefault","alert","push","text","onChange","target","value","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","rows","type","_c2","_c3","$RefreshReg$"],"sources":["C:/react/git/react/blog-frontend/src/components/post/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { writeComment } from '../../lib/api/posts';\r\n\r\nconst CommentFormBlock = styled.form`\r\n  h4 {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  textarea {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    font-size: 1.125rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    resize: none;\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom: 1px solid ${palette.gray[6]};\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 1rem;\r\n    float: right;\r\n  }\r\n`;\r\n\r\nconst CommentForm = ({ match, history }) => {\r\n  const [comment, setComment] = useState('');\r\n  const { user } = useSelector(({ user }) => ({\r\n    user: user.user,\r\n  }));\r\n  const { postId } = match.params;\r\n\r\n  const onSubmit = async (e) => {\r\n    console.log(postId);\r\n \r\n    e.preventDefault();\r\n    if (!user) {\r\n      alert('로그인이 필요합니다.');\r\n      history.push('/login');\r\n      return;\r\n    }\r\n    try {\r\n        console.log(comment);\r\n\r\n      await writeComment({\r\n        postId,\r\n        text: comment,\r\n        user: user,\r\n      });\r\n      setComment('');\r\n      // TODO: 포스트 다시 불러오기\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    \r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <CommentFormBlock onSubmit={onSubmit}>\r\n      <h4>댓글 쓰기</h4>\r\n      <textarea\r\n        value={comment}\r\n        onChange={onChange}\r\n        placeholder=\"댓글을 작성하세요.\"\r\n        rows={4}\r\n      />\r\n      <button type=\"submit\">등록</button>\r\n    </CommentFormBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(CommentForm);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}